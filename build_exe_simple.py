#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
import subprocess
import shutil
from pathlib import Path

def build_exe_simple():
    """–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ exe —Ñ–∞–π–ª–∞"""
    
    print("üî® –ü—Ä–æ—Å—Ç–∞—è —Å–±–æ—Ä–∫–∞ VK Bot Automation –≤ exe —Ñ–∞–π–ª...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PyInstaller
    try:
        import PyInstaller
        print(f"‚úÖ PyInstaller –≤–µ—Ä—Å–∏—è: {PyInstaller.__version__}")
    except ImportError:
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyInstaller...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", "pyinstaller"])
    
    # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫
    build_dir = Path("build")
    dist_dir = Path("dist")
    
    if build_dir.exists():
        shutil.rmtree(build_dir)
        print("üóëÔ∏è –û—á–∏—â–µ–Ω–∞ –ø–∞–ø–∫–∞ build")
    
    if dist_dir.exists():
        shutil.rmtree(dist_dir)
        print("üóëÔ∏è –û—á–∏—â–µ–Ω–∞ –ø–∞–ø–∫–∞ dist")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    if not Path("vk_bot_gui.py").exists():
        print("‚ùå –§–∞–π–ª vk_bot_gui.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    if not Path("vk_bot_automation.py").exists():
        print("‚ùå –§–∞–π–ª vk_bot_automation.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    print("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")
    
    # –ö–æ–º–∞–Ω–¥–∞ —Å–±–æ—Ä–∫–∏ PyInstaller
    cmd = [
        "pyinstaller",
        "--onefile",              # –û–¥–∏–Ω exe —Ñ–∞–π–ª
        "--windowed",             # –ë–µ–∑ –∫–æ–Ω—Å–æ–ª–∏
        "--name=VK_Bot_Automation",
        "--add-data=vk_bot_automation.py;.",  # –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥—É–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
        "--hidden-import=pyrogram",
        "--hidden-import=selenium",
        "--hidden-import=vk_api",
        "--hidden-import=undetected_chromedriver",
        "--hidden-import=fake_useragent",
        "--hidden-import=dotenv",
        "--hidden-import=tkinter",
        "--clean",
        "--noconfirm",
        "vk_bot_gui.py"
    ]
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã —Å–±–æ—Ä–∫–∏...")
    print(f"–ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd[:5])}... (–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã)")
    
    try:
        # –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏
        result = subprocess.run(cmd, capture_output=True, text=True, encoding='utf-8')
        
        if result.returncode == 0:
            print("‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            exe_file = dist_dir / "VK_Bot_Automation.exe"
            if exe_file.exists():
                file_size = exe_file.stat().st_size / (1024 * 1024)  # MB
                print(f"üì¶ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {exe_file}")
                print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:.1f} MB")
                
                # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ä—è–¥–æ–º —Å exe
                env_example_content = """# VK Bot Automation - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏

# Telegram API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
# –ü–æ–ª—É—á–∏—Ç–µ –Ω–∞ https://my.telegram.org
API_ID=your_api_id_here
API_HASH=your_api_hash_here
PHONE_NUMBER=+7xxxxxxxxxx

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
BOT_USERNAME=Vsem_Platit_bot

# VK API —Ç–æ–∫–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
# –ü–æ–ª—É—á–∏—Ç–µ –Ω–∞ https://vkhost.github.io/
VK_ACCESS_TOKEN=your_vk_token_here

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
HEADLESS=False
TASK_DELAY=20
RETRY_DELAY=5
MAX_RETRIES=3
"""
                
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                with open(dist_dir / ".env.example", "w", encoding="utf-8") as f:
                    f.write(env_example_content)
                print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.example")
                
                # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
                readme_content = """# VK Bot Automation

## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:

1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Ä—è–¥–æ–º —Å —ç—Ç–∏–º exe —Ñ–∞–π–ª–æ–º
2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–∑ .env.example –≤ .env
3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ:
   - API_ID –∏ API_HASH –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞ https://my.telegram.org
   - –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7xxxxxxxxxx
4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ VK_Bot_Automation.exe
5. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–ø—É—Å—Ç–∏—Ç—å"

## –í–∞–∂–Ω–æ:
- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Google Chrome –±—Ä–∞—É–∑–µ—Ä
- –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∏–∫–æ–º—É
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑—É–º–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏ (20+ —Å–µ–∫—É–Ω–¥)

–ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://github.com/your-repo/
"""
                
                with open(dist_dir / "README.txt", "w", encoding="utf-8") as f:
                    f.write(readme_content)
                print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª README.txt")
                
                return True
            else:
                print("‚ùå Exe —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ (–∫–æ–¥ –≤—ã—Ö–æ–¥–∞: {result.returncode})")
            print("–í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏:")
            print(result.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 60)
    print("üîß VK Bot Automation - –ü—Ä–æ—Å—Ç–∞—è —Å–±–æ—Ä–∫–∞ exe")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    required_files = ["vk_bot_gui.py", "vk_bot_automation.py"]
    missing_files = [f for f in required_files if not Path(f).exists()]
    
    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        return
    
    # –°–±–æ—Ä–∫–∞
    if build_exe_simple():
        print("\nüéâ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É dist/")
        print("2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env")
        print("3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env")
        print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ VK_Bot_Automation.exe")
        print("\nüìñ –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ README.txt –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π")
    else:
        print("\n‚ùå –°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å.")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("1. –û–±–Ω–æ–≤–∏—Ç—å PyInstaller: pip install --upgrade pyinstaller")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        print("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É")

if __name__ == "__main__":
    main()